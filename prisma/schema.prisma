// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id                   Int                    @id @default(autoincrement())
  name                 String
  ghanaPostGPS         String                 @unique @map("ghana_post_gps")
  createdAt            DateTime               @default(now()) @map("created_at")
  updatedAt            DateTime               @default(now()) @map("updated_at")
  phoneNumber         String                 @unique @map("phone_number")
  email                String?                @unique
  UsersOnOrganizations UsersOnOrganizations[]

  @@map("organizations")
}

model User {
  id                   Int                    @id @default(autoincrement())
  firstName            String                 @map("first_name")
  lastName             String                 @map("last_name")
  title                String?
  email                String?
  phoneNumber          String?                @map("phone_number")
  roles                UsersOnRoles[]
  UsersOnOrganizations UsersOnOrganizations[]

  @@map("users")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique()

  users UsersOnRoles[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("roles")
}

model UsersOnRoles {
  role Role @relation(fields: [roleId], references: [id])
  user User @relation(fields: [userId], references: [id])

  userId Int @map("user_id")
  roleId Int @map("role_id")

  @@id([roleId, userId])
  @@map("role_user")
}

model UsersOnOrganizations {
  organization    Organization @relation(fields: [organization_id], references: [id])
  user            User         @relation(fields: [user_id], references: [id])
  organization_id Int          @map("organizationId")
  user_id         Int          @map("userId")

  @@id([user_id, organization_id])
  @@map("organization_user")
}
